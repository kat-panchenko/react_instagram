{"version":3,"sources":["logo.png","error.png","components/header.js","components/user.js","services/instaservice.js","components/posts.js","components/users.js","components/feed.js","components/pallete.js","components/profile.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","react_router_dom","to","alt","src","logo","Component","User","href","this","props","min","name","InstaService","_this","Object","classCallCheck","getResource","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","result","wrap","_context","prev","next","fetch","concat","_apiBase","sent","ok","Error","status","abrupt","json","stop","_x","apply","arguments","getAllPosts","_callee2","_context2","getAllPhotos","_callee3","_context3","map","_transformPosts","post","id","Posts","state","posts","error","onPostsLoaded","setState","onError","err","updatePosts","then","catch","array","item","altname","photo","descr","key","user_User","_this$state","items","renderItems","Users","Feed","posts_Posts","Pallete","photos","onPhotosLoaded","updatePhotos","Profile","pallete_Pallete","App","header_Header","react_router","path","component","exact","ReactDOM","render","src_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4OCInBC,mLAEb,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,QACnBH,EAAAC,EAAAC,cAAA,OAAKI,IAAI,OAAOC,IAAKC,OAEzBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,eAAvB,cAEJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAWF,UAAU,eAA9B,uBAdIM,aCFfC,mLAEb,OACIV,EAAAC,EAAAC,cAAA,KAAGS,KAAK,IAAIR,UAAWS,KAAKC,MAAMC,IAAM,WAAa,QACjDd,EAAAC,EAAAC,cAAA,OAAKI,IAAKM,KAAKC,MAAMP,IAAKC,IAAKK,KAAKC,MAAMN,MAC1CP,EAAAC,EAAAC,cAAA,WAAMU,KAAKC,MAAME,cALCN,sCCFbO,EACjB,SAAAA,IAAc,IAAAC,EAAAL,KAAAM,OAAAC,EAAA,EAAAD,CAAAN,KAAAI,GAAAJ,KAIdQ,YAJc,eAAAC,EAAAH,OAAAI,EAAA,EAAAJ,CAAAK,EAAAtB,EAAAuB,KAIA,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAJ,EAAAtB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACWC,MAAK,GAAAC,OAAIhB,EAAKiB,UAATD,OAAoBP,IADpC,WACJC,EADIE,EAAAM,MAGEC,GAHF,CAAAP,EAAAE,KAAA,cAIA,IAAIM,MAAJ,mBAAAJ,OAA6BP,EAA7B,eAAAO,OAA8CN,EAAOW,SAJrD,cAAAT,EAAAU,OAAA,SAMHZ,EAAOa,QANJ,wBAAAX,EAAAY,SAAAhB,MAJA,gBAAAiB,GAAA,OAAArB,EAAAsB,MAAA/B,KAAAgC,YAAA,GAAAhC,KAadiC,YAbc3B,OAAAI,EAAA,EAAAJ,CAAAK,EAAAtB,EAAAuB,KAaA,SAAAsB,IAAA,IAAAnB,EAAA,OAAAJ,EAAAtB,EAAA2B,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACWd,EAAKG,YAAY,UAD5B,cACJO,EADIoB,EAAAZ,KAAAY,EAAAR,OAAA,SAEHZ,GAFG,wBAAAoB,EAAAN,SAAAK,MAbAlC,KAkBdoC,aAlBc9B,OAAAI,EAAA,EAAAJ,CAAAK,EAAAtB,EAAAuB,KAkBC,SAAAyB,IAAA,IAAAtB,EAAA,OAAAJ,EAAAtB,EAAA2B,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACUd,EAAKG,YAAY,UAD3B,cACLO,EADKuB,EAAAf,KAAAe,EAAAX,OAAA,SAEJZ,EAAOwB,IAAIlC,EAAKmC,kBAFZ,wBAAAF,EAAAT,SAAAQ,MAlBDrC,KAuBdwC,gBAAkB,SAACC,GAClB,MAAO,CACH9C,IAAK8C,EAAK9C,IACVD,IAAK+C,EAAK/C,IACVgD,GAAID,EAAKC,KA1BlB1C,KAAKsB,SAAW,0BCGKqB,oNACjBvC,aAAe,IAAIA,IACnBwC,MAAQ,CACJC,MAAO,GACPC,OAAO,KAaXC,cAAgB,SAACF,GACbxC,EAAK2C,SAAS,CACVH,QACAC,OAAO,OAGXG,QAAU,SAACC,GACT7C,EAAK2C,SAAS,CACVF,OAAO,wFAjBb9C,KAAKmD,oDAILnD,KAAKI,aAAa6B,cACbmB,KAAKpD,KAAK+C,eACVM,MAAMrD,KAAKiD,6CAeJK,GACR,OAAOA,EAAMf,IAAI,SAACgB,GAAS,IAChBpD,EAA6CoD,EAA7CpD,KAAMqD,EAAuCD,EAAvCC,QAASC,EAA8BF,EAA9BE,MAAO9D,EAAuB4D,EAAvB5D,IAAKD,EAAkB6D,EAAlB7D,IAAKgE,EAAaH,EAAbG,MAAOhB,EAAMa,EAANb,GAE9C,OACItD,EAAAC,EAAAC,cAAA,OAAKqE,IAAKjB,EAAInD,UAAU,QACpBH,EAAAC,EAAAC,cAACsE,EAAD,CACIjE,IAAK8D,EACL/D,IAAK8D,EACLrD,KAAMA,EACND,KAAG,IACPd,EAAAC,EAAAC,cAAA,OAAKI,IAAKA,EAAKC,IAAKA,IACpBP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVY,GAELf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACVmE,uCAQhB,IAAAG,EACsB7D,KAAK4C,MAArBE,EADNe,EACMf,MAAOD,EADbgB,EACahB,MACd,GAAIC,EACA,OAAO1D,EAAAC,EAAAC,cAAA,qBAGX,IAAMwE,EAAQ9D,KAAK+D,YAAYlB,GAEnC,OACIzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACVuE,UA/DkBjE,cCFpB,SAASmE,IACpB,OACI5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACsE,EAAD,CACIjE,IAAI,4EACJD,IAAI,UACJS,KAAK,gBACTf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACsE,EAAD,CACIjE,IAAI,4EACJD,IAAI,UACJS,KAAK,cACLD,KAAG,IACPd,EAAAC,EAAAC,cAACsE,EAAD,CACIjE,IAAI,4EACJD,IAAI,UACJS,KAAK,cACLD,KAAG,IACPd,EAAAC,EAAAC,cAACsE,EAAD,CACIjE,IAAI,4EACJD,IAAI,UACJS,KAAK,cACLD,KAAG,IACPd,EAAAC,EAAAC,cAACsE,EAAD,CACIjE,IAAI,4EACJD,IAAI,UACJS,KAAK,cACLD,KAAG,MC1BR,SAAS+D,IACpB,OACI7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAC4E,EAAD,MACA9E,EAAAC,EAAAC,cAAC0E,EAAD,WCJSG,6MACjB/D,aAAe,IAAIA,IACnBwC,MAAQ,CACJwB,OAAQ,GACRtB,OAAO,KAaXuB,eAAiB,SAACD,GACd/D,EAAK2C,SAAS,CACVoB,SACAtB,OAAO,OAGfG,QAAU,SAACC,GACP7C,EAAK2C,SAAS,CACVF,OAAO,wFAjBX9C,KAAKsE,sDAILtE,KAAKI,aAAagC,eACbgB,KAAKpD,KAAKqE,gBACVhB,MAAMrD,KAAKiD,6CAeRK,GACR,OAAOA,EAAMf,IAAI,SAACgB,GAAS,IAChB5D,EAAgB4D,EAAhB5D,IAAKD,EAAW6D,EAAX7D,IAAKgD,EAAMa,EAANb,GACjB,OACItD,EAAAC,EAAAC,cAAA,OAAKK,IAAKA,EAAKD,IAAKA,EAAKiE,IAAKjB,uCAKjC,IAAAmB,EACmB7D,KAAK4C,MAAtBE,EADFe,EACEf,MAAOsB,EADTP,EACSO,OACd,GAAItB,EACA,OAAO1D,EAAAC,EAAAC,cAAA,qBAGX,IAAMwE,EAAQ9D,KAAK+D,YAAYK,GAE/B,OACIhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACVuE,UAhDoBjE,aCatB0E,EAbC,WACZ,OACInF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACsE,EAAD,CACIjE,IAAI,6EACJD,IAAI,QACJS,KAAK,cAETf,EAAAC,EAAAC,cAACkF,EAAD,gBCOGC,MAbf,WACI,OACGrF,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACoF,EAAD,MACAtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWZ,EAAMa,OAAK,IACtC1F,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWN,EAASO,OAAK,OCP/DC,IAASC,OAAO5F,EAAAC,EAAAC,cAAC2F,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.58fa43f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3d8e0c91.png\";","module.exports = __webpack_public_path__ + \"static/media/error.3b8ad90a.png\";","import React, { Component } from 'react';\r\nimport logo from '../logo.png';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container h-flex\">\r\n                    <Link to=\"/\" className=\"logo\">\r\n                        <img alt=\"logo\" src={logo}/>\r\n                    </Link>\r\n                    <nav className=\"links\">\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/\" className=\"menu__links\">News feed</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/profile\" className=\"menu__links\">Profile</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nexport default class User extends Component {\r\n    render() {\r\n        return (\r\n            <a href=\"#\" className={this.props.min ? \"user min\" : \"user\"}>\r\n                <img alt={this.props.alt} src={this.props.src}/>\r\n                <div>{this.props.name}</div>\r\n            </a>\r\n        )\r\n    }\r\n}","export default class InstaService {\r\n    constructor() {\r\nthis._apiBase = 'http://localhost:3000/'\r\n    }\r\n\r\n    getResource = async (url) => { //в асинхронной функции нужно обязательно указывать то, что мы ждем(результат фетча)\r\n        const result = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if (!result.ok) {\r\n            throw new Error(`Could not fetch ${url}, received ${result.status}`)\r\n        }\r\n        return result.json(); //обещание(промис) возвращает указанный формат, json-просто формат\r\n    };\r\n\r\n    getAllPosts = async () => {\r\n        const result = await this.getResource('posts/');\r\n        return result;\r\n    };\r\n\r\n    getAllPhotos = async () => {\r\n        const result = await this.getResource('posts/');\r\n        return result.map(this._transformPosts);\r\n    };\r\n\r\n    _transformPosts = (post) => {\r\n     return {\r\n         src: post.src,\r\n         alt: post.alt,\r\n         id: post.id\r\n     }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport User from './user';\r\nimport InstaService from '../services/instaservice';\r\nimport errorMessage from './errorMessage';\r\n\r\nexport default class Posts extends Component {\r\n    InstaService = new InstaService(); //создали сервер,заимпортировати внутрь класса чтобы обращаться к базе данных\r\n    state = {\r\n        posts: [],\r\n        error: false\r\n    }; //создали состояние компонента для отслеживания какие есть посты и ошибки\r\n\r\n    componentDidMount() { // после того как компонент построился, запускается функция обновления постов\r\n        this.updatePosts();\r\n    }\r\n\r\n    updatePosts() {\r\n        this.InstaService.getAllPosts() //запускает сервис,с помощью метода гетОлПостс получает все посты\r\n            .then(this.onPostsLoaded) //обробатывает промис который она возвращает , и если все ок- запуск функции онПостсЛоадид\r\n            .catch(this.onError); //если сервис не отвечает- получаем ошибку\r\n    }\r\n\r\n    onPostsLoaded = (posts) => { //получает посты из базы данных и устанавливает посты в состояние\r\n        this.setState({\r\n            posts,\r\n            error: false\r\n        })\r\n    };\r\n        onError = (err) => { //при выводе ошибки переводит состояние компонента\r\n          this.setState({\r\n              error: true\r\n          })\r\n        };\r\n\r\n        renderItems(array) {\r\n            return array.map((item) => {\r\n                const {name, altname, photo, src, alt, descr, id} = item;\r\n\r\n                return (\r\n                    <div key={id} className=\"post\">\r\n                        <User\r\n                            src={photo}\r\n                            alt={altname}\r\n                            name={name}\r\n                            min/>\r\n                        <img alt={alt} src={src}/>\r\n                        <div className=\"post__name\">\r\n                            {name}\r\n                        </div>\r\n                        <div className=\"post__descr\">\r\n                            {descr}\r\n                        </div>\r\n                    </div>\r\n                )\r\n\r\n            })\r\n        }\r\n\r\n    render() {\r\n            const {error, posts} = this.state;\r\n            if (error) {\r\n                return <errorMessage/>\r\n            }\r\n\r\n            const items = this.renderItems(posts);\r\n\r\n        return (\r\n            <div className=\"left\">\r\n                {items}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport User from './user';\r\n\r\nexport default function Users() {\r\n    return (\r\n        <div className=\"right\">\r\n            <User\r\n                src=\"https://static.businessinsider.sg/2019/03/03/5c7feb69eb3ce83b44531ba6.png\"\r\n                alt=\"actress\"\r\n                name=\"Halle Berry\"/>\r\n            <div className=\"users__block\">\r\n                <User\r\n                    src=\"https://static.businessinsider.sg/2019/03/03/5c7feb69eb3ce83b44531ba6.png\"\r\n                    alt=\"actress\"\r\n                    name=\"Halle Berry\"\r\n                    min/>\r\n                <User\r\n                    src=\"https://static.businessinsider.sg/2019/03/03/5c7feb69eb3ce83b44531ba6.png\"\r\n                    alt=\"actress\"\r\n                    name=\"Halle Berry\"\r\n                    min/>\r\n                <User\r\n                    src=\"https://static.businessinsider.sg/2019/03/03/5c7feb69eb3ce83b44531ba6.png\"\r\n                    alt=\"actress\"\r\n                    name=\"Halle Berry\"\r\n                    min/>\r\n                <User\r\n                    src=\"https://static.businessinsider.sg/2019/03/03/5c7feb69eb3ce83b44531ba6.png\"\r\n                    alt=\"actress\"\r\n                    name=\"Halle Berry\"\r\n                    min/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Posts from './posts';\r\nimport Users from \"./users\";\r\n\r\nexport default function Feed() {\r\n    return (\r\n        <div className=\"container feed\">\r\n            <Posts/>\r\n            <Users/>\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react';\r\nimport errorMessage from './errorMessage';\r\nimport InstaService from '../services/instaservice';\r\n\r\nexport default class Pallete extends Component {\r\n    InstaService = new InstaService();\r\n    state = {\r\n        photos: [],\r\n        error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updatePhotos();\r\n    }\r\n\r\n    updatePhotos() {\r\n        this.InstaService.getAllPhotos()\r\n            .then(this.onPhotosLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    onPhotosLoaded = (photos) => {\r\n        this.setState({\r\n            photos,\r\n            error: false\r\n        })\r\n    };\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    };\r\n\r\n    renderItems(array) {\r\n        return array.map((item) => {\r\n            const {src, alt, id} = item;\r\n            return (\r\n                <img src={src} alt={alt} key={id}/>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {error, photos} = this.state;\r\n        if (error) {\r\n            return <errorMessage/>\r\n        }\r\n\r\n        const items = this.renderItems(photos);\r\n\r\n        return (\r\n            <div className=\"palette\">\r\n                {items}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport User from './user';\r\nimport Pallete from './pallete';\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className=\"container profile\">\r\n            <User\r\n                src=\"https://ukranews.com/upload/news/2018/05/20/5931181a063c6-899_1200.jpg?v=1\"\r\n                alt=\"photo\"\r\n                name=\"Elon Mask\"\r\n            />\r\n            <Pallete/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\nimport Header from './components/header';\nimport Feed from \"./components/feed\";\nimport Profile from \"./components/profile\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\n\nfunction App() {\n    return (\n       <Router>\n           <div className=\"App\">\n               <Header/>\n               <Route path='/' component={Feed} exact/>\n               <Route path='/profile' component={Profile} exact/>\n           </div>\n       </Router>\n    );\n}\n/*exact- добавляет только то что нам нужно, а не то что присвоено слешу + слово после слеша (/profile)*/\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}